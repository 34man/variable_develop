# ！/usr/bin/env/python
# coding: utf-8

"""
@File       :get_holiday_weekday.py
@auth       :sx
@Date       :2019/4/29
@Desc       :判断日期是不是假日，或者周末以及工作日
"""

import datetime


def get_holiday(date):
    """
    返回传入的时间是节假日还是工作日或者是工作日
    :param date: 时间例如“2019-02-01”
    :return: 返回 0-6 表示星期一到星期天 返回7 表示 节假日
    """
    if date != date:
        return -1
    elif date in ['2014-01-01',
                  '2014-01-31',
                  '2014-02-01',
                  '2014-02-02',
                  '2014-02-03',
                  '2014-02-04',
                  '2014-02-05',
                  '2014-02-06',
                  '2014-04-05',
                  '2014-04-06',
                  '2014-04-07',
                  '2014-05-01',
                  '2014-05-02',
                  '2014-05-03',
                  '2014-05-31',
                  '2014-06-01',
                  '2014-06-02',
                  '2014-09-06',
                  '2014-09-07',
                  '2014-09-08',
                  '2014-10-01',
                  '2014-10-02',
                  '2014-10-03',
                  '2014-10-04',
                  '2014-10-05',
                  '2014-10-06',
                  '2014-10-07',
                  '2015-01-01',
                  '2015-01-02',
                  '2015-01-03',
                  '2015-02-18',
                  '2015-02-19',
                  '2015-02-20',
                  '2015-02-21',
                  '2015-02-22',
                  '2015-02-23',
                  '2015-02-24',
                  '2015-04-04',
                  '2015-04-05',
                  '2015-04-06',
                  '2015-05-01',
                  '2015-05-02',
                  '2015-05-03',
                  '2015-06-20',
                  '2015-06-21',
                  '2015-06-22',
                  '2015-09-03',
                  '2015-09-04',
                  '2015-09-05',
                  '2015-09-26',
                  '2015-09-27',
                  '2015-10-01',
                  '2015-10-02',
                  '2015-10-03',
                  '2015-10-04',
                  '2015-10-05',
                  '2015-10-06',
                  '2015-10-07',
                  '2016-01-01',
                  '2016-01-02',
                  '2016-01-03',
                  '2016-02-07',
                  '2016-02-08',
                  '2016-02-09',
                  '2016-02-10',
                  '2016-02-11',
                  '2016-02-12',
                  '2016-02-13',
                  '2016-04-02',
                  '2016-04-03',
                  '2016-04-04',
                  '2016-04-30',
                  '2016-05-01',
                  '2016-05-02',
                  '2016-06-09',
                  '2016-06-10',
                  '2016-06-11',
                  '2016-09-15',
                  '2016-09-16',
                  '2016-09-17',
                  '2016-10-01',
                  '2016-10-02',
                  '2016-10-03',
                  '2016-10-04',
                  '2016-10-05',
                  '2016-10-06',
                  '2016-10-07',
                  '2016-12-31',
                  '2017-01-01',
                  '2017-01-02',
                  '2017-01-27',
                  '2017-01-28',
                  '2017-01-29',
                  '2017-01-30',
                  '2017-01-31',
                  '2017-02-01',
                  '2017-02-02',
                  '2017-04-02',
                  '2017-04-03',
                  '2017-04-04',
                  '2017-04-29',
                  '2017-04-30',
                  '2017-05-01',
                  '2017-05-28',
                  '2017-05-29',
                  '2017-05-30',
                  '2017-10-01',
                  '2017-10-02',
                  '2017-10-03',
                  '2017-10-04',
                  '2017-10-05',
                  '2017-10-06',
                  '2017-10-07',
                  '2017-10-08',
                  '2017-12-30',
                  '2017-12-31',
                  '2018-01-01',
                  '2018-02-15',
                  '2018-02-16',
                  '2018-02-17',
                  '2018-02-18',
                  '2018-02-19',
                  '2018-02-20',
                  '2018-02-21',
                  '2018-04-05',
                  '2018-04-06',
                  '2018-04-07',
                  '2018-04-29',
                  '2018-04-30',
                  '2018-05-01',
                  '2018-06-16',
                  '2018-06-17',
                  '2018-06-18',
                  '2018-09-22',
                  '2018-09-23',
                  '2018-09-24',
                  '2018-10-01',
                  '2018-10-02',
                  '2018-10-03',
                  '2018-10-04',
                  '2018-10-05',
                  '2018-10-06',
                  '2018-10-07',
                  "2018-12-30",
                  "2018-12-31",
                  "2019-01-01",
                  "2019-02-04",
                  "2019-02-05",
                  "2019-02-06",
                  "2019-02-07",
                  "2019-02-08",
                  "2019-02-09",
                  "2019-02-10",
                  "2019-04-05",
                  "2019-04-06",
                  "2019-04-07",
                  "2019-05-01",
                  "2019-05-02",
                  "2019-05-03",
                  "2019-05-04",
                  "2019-06-07",
                  "2019-09-13",
                  "2019-09-14",
                  "2019-09-15",
                  "2019-10-01",
                  "2019-10-02",
                  "2019-10-03",
                  "2019-10-04",
                  "2019-10-05",
                  "2019-10-06",
                  "2019-10-07"
                  ]:
        return 7
    else:
        week = datetime.datetime.strptime(str(date), "%Y-%m-%d").weekday()
        return week


# 测试主函数
if __name__ == "__main__":
    import pandas as pd
    import numpy as np
    df_date = pd.DataFrame({'data': [datetime.date.today()]})
    a = df_date['data'].map(lambda x: get_holiday(x))
    b = map(get_holiday, np.array(df_date['data']))
    for haha in b:
        print(haha)
